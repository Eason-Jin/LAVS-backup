package uoa.lavs.dataoperations.loan;

import java.sql.*;
import uoa.lavs.mainframe.Instance;
import uoa.lavs.mainframe.LoanStatus;
import uoa.lavs.mainframe.Status;
import uoa.lavs.mainframe.messages.loan.UpdateLoan;
import uoa.lavs.mainframe.messages.loan.UpdateLoanStatus;
import uoa.lavs.models.Loan;

public class LoanUpdater {

  public static void updateData(String loanId, Loan loan) {
    try {
      // Attempt to update the mainframe first
      loanId = updateMainframe(loanId, loan);
    } catch (Exception e) {
      System.out.println("Mainframe update failed: " + e.getMessage());
    } finally {
      try {
        // Always attempt to update the database
        updateDatabase(loanId, loan);
      } catch (SQLException e) {
        System.out.println("Database update failed: " + e.getMessage());
      }
    }
  }

  private static void updateDatabase(String loanId, Loan loan) throws SQLException {

    String sql =
        "INSERT INTO Loan (CustomerName, Status, Principal, RateValue, RateType, StartDate,"
            + " Period, Term, PaymentAmount, PaymentFrequency, Compounding, CustomerID, LoanID)"
            + " VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

    // PreparedStatement prepares an SQL statement for execution. We then obtain the auto generated
    // incremented
    // key value.
    try (Connection connection = DriverManager.getConnection("jdbc:sqlite:database.sqlite");
        PreparedStatement statement =
            connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {
      statement.setString(1, loan.getCustomerName());
      statement.setString(2, loan.getStatus());
      statement.setDouble(3, loan.getPrincipal());
      statement.setDouble(4, loan.getRateValue());
      statement.setString(5, loan.getRateType().toString());
      statement.setObject(6, loan.getStartDate());
      statement.setInt(7, loan.getPeriod());
      statement.setInt(8, loan.getTerm());
      statement.setDouble(9, loan.getPaymentAmount());
      statement.setString(10, loan.getPaymentFrequency().toString());
      statement.setString(11, loan.getCompounding().toString());
      statement.setString(12, loan.getCustomerId());
      statement.setString(13, loanId);

      // Now that we have filled in our SQL query, execute it
      statement.executeUpdate();

      // Set the loanId of the loan object we passed into, to be the autogenerated one.
      if (loanId == null) {
        try (ResultSet generatedKeys = statement.getGeneratedKeys()) {
          if (generatedKeys.next()) {
            loanId = generatedKeys.getString(1);
          }
        }
      }
      loan.setLoanId(loanId);
    }
  }

  private static String updateMainframe(String loanId, Loan loan) throws Exception {
    UpdateLoan updateLoan = new UpdateLoan();
    UpdateLoanStatus updateLoanStatus = new UpdateLoanStatus();
    updateLoan.setLoanId(loanId);
    updateLoan.setCustomerId(loan.getCustomerId());
    updateLoan.setPrincipal(loan.getPrincipal());
    updateLoan.setRateValue(loan.getRateValue());
    updateLoan.setRateType(loan.getRateType());
    updateLoan.setStartDate(loan.getStartDate());
    updateLoan.setPeriod(loan.getPeriod());
    updateLoan.setTerm(loan.getTerm());
    updateLoan.setPaymentAmount(loan.getPaymentAmount());
    updateLoan.setPaymentFrequency(loan.getPaymentFrequency());
    updateLoan.setCompounding(loan.getCompounding());
    updateLoanStatus.setStatus(LoanStatus.Pending);

    Status status = updateLoan.send(Instance.getConnection());
    if (!status.getWasSuccessful()) {
      System.out.println(
          "Something went wrong - the Mainframe send failed! The code is " + status.getErrorCode());
      throw new Exception("Mainframe send failed");
    }
    updateLoanStatus.setLoanId(updateLoan.getLoanIdFromServer());
    Status status2 = updateLoanStatus.send(Instance.getConnection());
    if (!status2.getWasSuccessful()) {
      System.out.println(
          "Something went wrong - the Mainframe send failed! The code is " + status.getErrorCode());
      throw new Exception("Mainframe send failed");
    }
    // Synchronise the ID and Status across Local and Mainframe
    loan.setLoanId(updateLoan.getLoanIdFromServer());
    loan.setStatus(updateLoan.getStatusFromServer());
    return updateLoan.getLoanIdFromServer();
  }
}
